<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="RPGContextDataSet" targetNamespace="http://tempuri.org/RPGContextDataSet.xsd" xmlns:mstns="http://tempuri.org/RPGContextDataSet.xsd" xmlns="http://tempuri.org/RPGContextDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="RPGArtifactsManager_DatabaseRPG_RPGContextConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="RPGArtifactsManager_DatabaseRPG_RPGContextConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.RPGArtifactsMenager.Properties.Settings.GlobalReference.Default.RPGArtifactsManager_DatabaseRPG_RPGContextConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="__MigrationHistoryTableAdapter" GeneratorDataComponentClassName="__MigrationHistoryTableAdapter" Name="__MigrationHistory" UserDataComponentName="__MigrationHistoryTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="RPGArtifactsManager_DatabaseRPG_RPGContextConnectionString (Settings)" DbObjectName="dbo.[__MigrationHistory]" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[__MigrationHistory] WHERE (([MigrationId] = @Original_MigrationId) AND ([ContextKey] = @Original_ContextKey) AND ([ProductVersion] = @Original_ProductVersion))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_MigrationId" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="MigrationId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_ContextKey" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ContextKey" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_ProductVersion" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ProductVersion" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[__MigrationHistory] ([MigrationId], [ContextKey], [Model], [ProductVersion]) VALUES (@MigrationId, @ContextKey, @Model, @ProductVersion);
SELECT MigrationId, ContextKey, Model, ProductVersion FROM __MigrationHistory WHERE (ContextKey = @ContextKey) AND (MigrationId = @MigrationId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@MigrationId" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="MigrationId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ContextKey" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ContextKey" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@Model" Precision="0" ProviderType="VarBinary" Scale="0" Size="0" SourceColumn="Model" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ProductVersion" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ProductVersion" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT MigrationId, ContextKey, Model, ProductVersion FROM dbo.[__MigrationHistory]</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[__MigrationHistory] SET [MigrationId] = @MigrationId, [ContextKey] = @ContextKey, [Model] = @Model, [ProductVersion] = @ProductVersion WHERE (([MigrationId] = @Original_MigrationId) AND ([ContextKey] = @Original_ContextKey) AND ([ProductVersion] = @Original_ProductVersion));
SELECT MigrationId, ContextKey, Model, ProductVersion FROM __MigrationHistory WHERE (ContextKey = @ContextKey) AND (MigrationId = @MigrationId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@MigrationId" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="MigrationId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ContextKey" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ContextKey" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@Model" Precision="0" ProviderType="VarBinary" Scale="0" Size="0" SourceColumn="Model" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ProductVersion" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ProductVersion" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_MigrationId" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="MigrationId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_ContextKey" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ContextKey" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_ProductVersion" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ProductVersion" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="MigrationId" DataSetColumn="MigrationId" />
              <Mapping SourceColumn="ContextKey" DataSetColumn="ContextKey" />
              <Mapping SourceColumn="Model" DataSetColumn="Model" />
              <Mapping SourceColumn="ProductVersion" DataSetColumn="ProductVersion" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CategoriesTableAdapter" GeneratorDataComponentClassName="CategoriesTableAdapter" Name="Categories" UserDataComponentName="CategoriesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="RPGArtifactsManager_DatabaseRPG_RPGContextConnectionString (Settings)" DbObjectName="dbo.Categories" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Categories] WHERE (([CategoryID] = @Original_CategoryID) AND ((@IsNull_ParentCategoryID = 1 AND [ParentCategoryID] IS NULL) OR ([ParentCategoryID] = @Original_ParentCategoryID)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CategoryID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CategoryID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_ParentCategoryID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ParentCategoryID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ParentCategoryID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ParentCategoryID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Categories] ([Name], [ParentCategoryID]) VALUES (@Name, @ParentCategoryID);
SELECT CategoryID, Name, ParentCategoryID FROM Categories WHERE (CategoryID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ParentCategoryID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ParentCategoryID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT CategoryID, Name, ParentCategoryID FROM dbo.Categories</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Categories] SET [Name] = @Name, [ParentCategoryID] = @ParentCategoryID WHERE (([CategoryID] = @Original_CategoryID) AND ((@IsNull_ParentCategoryID = 1 AND [ParentCategoryID] IS NULL) OR ([ParentCategoryID] = @Original_ParentCategoryID)));
SELECT CategoryID, Name, ParentCategoryID FROM Categories WHERE (CategoryID = @CategoryID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ParentCategoryID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ParentCategoryID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CategoryID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CategoryID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_ParentCategoryID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ParentCategoryID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ParentCategoryID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ParentCategoryID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="CategoryID" ColumnName="CategoryID" DataSourceName="[E:\.NET_PROJECTS\RPGARTIFACTSMENAGER\RPGARTIFACTSMENAGER\RPGARTIFACTSMANAGER.DATABASERPG.RPGCONTEXT.MDF].dbo.Categories" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@CategoryID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="CategoryID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="CategoryID" DataSetColumn="CategoryID" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
              <Mapping SourceColumn="ParentCategoryID" DataSetColumn="ParentCategoryID" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CategoryPropertyTableAdapter" GeneratorDataComponentClassName="CategoryPropertyTableAdapter" Name="CategoryProperty" UserDataComponentName="CategoryPropertyTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="RPGArtifactsManager_DatabaseRPG_RPGContextConnectionString (Settings)" DbObjectName="dbo.CategoryProperty" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[CategoryProperty] WHERE (([CategoryID] = @Original_CategoryID) AND ([PropertyID] = @Original_PropertyID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CategoryID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CategoryID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_PropertyID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PropertyID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[CategoryProperty] ([CategoryID], [PropertyID]) VALUES (@CategoryID, @PropertyID);
SELECT CategoryID, PropertyID FROM CategoryProperty WHERE (CategoryID = @CategoryID) AND (PropertyID = @PropertyID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@CategoryID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CategoryID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@PropertyID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PropertyID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT CategoryID, PropertyID FROM dbo.CategoryProperty</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[CategoryProperty] SET [CategoryID] = @CategoryID, [PropertyID] = @PropertyID WHERE (([CategoryID] = @Original_CategoryID) AND ([PropertyID] = @Original_PropertyID));
SELECT CategoryID, PropertyID FROM CategoryProperty WHERE (CategoryID = @CategoryID) AND (PropertyID = @PropertyID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@CategoryID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CategoryID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@PropertyID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PropertyID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CategoryID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CategoryID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_PropertyID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PropertyID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="CategoryID" DataSetColumn="CategoryID" />
              <Mapping SourceColumn="PropertyID" DataSetColumn="PropertyID" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="InstancePropertyTableAdapter" GeneratorDataComponentClassName="InstancePropertyTableAdapter" Name="InstanceProperty" UserDataComponentName="InstancePropertyTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="RPGArtifactsManager_DatabaseRPG_RPGContextConnectionString (Settings)" DbObjectName="dbo.InstanceProperty" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[InstanceProperty] WHERE (([InstanceID] = @Original_InstanceID) AND ([PropertyID] = @Original_PropertyID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_InstanceID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="InstanceID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_PropertyID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PropertyID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[InstanceProperty] ([InstanceID], [PropertyID]) VALUES (@InstanceID, @PropertyID);
SELECT InstanceID, PropertyID FROM InstanceProperty WHERE (InstanceID = @InstanceID) AND (PropertyID = @PropertyID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@InstanceID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="InstanceID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@PropertyID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PropertyID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT InstanceID, PropertyID FROM dbo.InstanceProperty</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[InstanceProperty] SET [InstanceID] = @InstanceID, [PropertyID] = @PropertyID WHERE (([InstanceID] = @Original_InstanceID) AND ([PropertyID] = @Original_PropertyID));
SELECT InstanceID, PropertyID FROM InstanceProperty WHERE (InstanceID = @InstanceID) AND (PropertyID = @PropertyID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@InstanceID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="InstanceID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@PropertyID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PropertyID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_InstanceID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="InstanceID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_PropertyID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PropertyID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="InstanceID" DataSetColumn="InstanceID" />
              <Mapping SourceColumn="PropertyID" DataSetColumn="PropertyID" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="InstancesTableAdapter" GeneratorDataComponentClassName="InstancesTableAdapter" Name="Instances" UserDataComponentName="InstancesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="RPGArtifactsManager_DatabaseRPG_RPGContextConnectionString (Settings)" DbObjectName="dbo.Instances" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Instances] WHERE (([InstanceID] = @Original_InstanceID) AND ([CategoryID] = @Original_CategoryID) AND ([CreatedAt] = @Original_CreatedAt) AND ([UpdatedAt] = @Original_UpdatedAt))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_InstanceID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="InstanceID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CategoryID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CategoryID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_CreatedAt" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="CreatedAt" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_UpdatedAt" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="UpdatedAt" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Instances] ([Name], [CategoryID], [CreatedAt], [UpdatedAt]) VALUES (@Name, @CategoryID, @CreatedAt, @UpdatedAt);
SELECT InstanceID, Name, CategoryID, CreatedAt, UpdatedAt FROM Instances WHERE (InstanceID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@CategoryID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CategoryID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@CreatedAt" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="CreatedAt" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@UpdatedAt" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="UpdatedAt" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT InstanceID, Name, CategoryID, CreatedAt, UpdatedAt FROM dbo.Instances</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Instances] SET [Name] = @Name, [CategoryID] = @CategoryID, [CreatedAt] = @CreatedAt, [UpdatedAt] = @UpdatedAt WHERE (([InstanceID] = @Original_InstanceID) AND ([CategoryID] = @Original_CategoryID) AND ([CreatedAt] = @Original_CreatedAt) AND ([UpdatedAt] = @Original_UpdatedAt));
SELECT InstanceID, Name, CategoryID, CreatedAt, UpdatedAt FROM Instances WHERE (InstanceID = @InstanceID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@CategoryID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CategoryID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@CreatedAt" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="CreatedAt" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@UpdatedAt" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="UpdatedAt" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_InstanceID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="InstanceID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CategoryID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CategoryID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_CreatedAt" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="CreatedAt" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_UpdatedAt" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="UpdatedAt" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="InstanceID" ColumnName="InstanceID" DataSourceName="[E:\.NET_PROJECTS\RPGARTIFACTSMENAGER\RPGARTIFACTSMENAGER\RPGARTIFACTSMANAGER.DATABASERPG.RPGCONTEXT.MDF].dbo.Instances" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@InstanceID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="InstanceID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="InstanceID" DataSetColumn="InstanceID" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
              <Mapping SourceColumn="CategoryID" DataSetColumn="CategoryID" />
              <Mapping SourceColumn="CreatedAt" DataSetColumn="CreatedAt" />
              <Mapping SourceColumn="UpdatedAt" DataSetColumn="UpdatedAt" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PropertiesTableAdapter" GeneratorDataComponentClassName="PropertiesTableAdapter" Name="Properties" UserDataComponentName="PropertiesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="RPGArtifactsManager_DatabaseRPG_RPGContextConnectionString (Settings)" DbObjectName="dbo.Properties" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Properties] WHERE (([PropertyID] = @Original_PropertyID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_PropertyID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PropertyID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Properties] ([Name]) VALUES (@Name);
SELECT PropertyID, Name FROM Properties WHERE (PropertyID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT PropertyID, Name FROM dbo.Properties</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Properties] SET [Name] = @Name WHERE (([PropertyID] = @Original_PropertyID));
SELECT PropertyID, Name FROM Properties WHERE (PropertyID = @PropertyID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_PropertyID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PropertyID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="PropertyID" ColumnName="PropertyID" DataSourceName="[E:\.NET_PROJECTS\RPGARTIFACTSMENAGER\RPGARTIFACTSMENAGER\RPGARTIFACTSMANAGER.DATABASERPG.RPGCONTEXT.MDF].dbo.Properties" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@PropertyID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="PropertyID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="PropertyID" DataSetColumn="PropertyID" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PropertyValuesTableAdapter" GeneratorDataComponentClassName="PropertyValuesTableAdapter" Name="PropertyValues" UserDataComponentName="PropertyValuesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="RPGArtifactsManager_DatabaseRPG_RPGContextConnectionString (Settings)" DbObjectName="dbo.PropertyValues" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[PropertyValues] WHERE (([PropertyValueID] = @Original_PropertyValueID) AND ([PropertyID] = @Original_PropertyID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_PropertyValueID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PropertyValueID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_PropertyID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PropertyID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[PropertyValues] ([Value], [PropertyID]) VALUES (@Value, @PropertyID);
SELECT PropertyValueID, Value, PropertyID FROM PropertyValues WHERE (PropertyValueID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Value" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Value" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@PropertyID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PropertyID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT PropertyValueID, Value, PropertyID FROM dbo.PropertyValues</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[PropertyValues] SET [Value] = @Value, [PropertyID] = @PropertyID WHERE (([PropertyValueID] = @Original_PropertyValueID) AND ([PropertyID] = @Original_PropertyID));
SELECT PropertyValueID, Value, PropertyID FROM PropertyValues WHERE (PropertyValueID = @PropertyValueID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Value" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Value" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@PropertyID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PropertyID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_PropertyValueID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PropertyValueID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_PropertyID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PropertyID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="PropertyValueID" ColumnName="PropertyValueID" DataSourceName="[E:\.NET_PROJECTS\RPGARTIFACTSMENAGER\RPGARTIFACTSMENAGER\RPGARTIFACTSMANAGER.DATABASERPG.RPGCONTEXT.MDF].dbo.PropertyValues" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@PropertyValueID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="PropertyValueID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="PropertyValueID" DataSetColumn="PropertyValueID" />
              <Mapping SourceColumn="Value" DataSetColumn="Value" />
              <Mapping SourceColumn="PropertyID" DataSetColumn="PropertyID" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="RPGContextDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="RPGContextDataSet" msprop:Generator_UserDSName="RPGContextDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="__MigrationHistory" msprop:Generator_TableClassName="__MigrationHistoryDataTable" msprop:Generator_TableVarName="table__MigrationHistory" msprop:Generator_TablePropName="__MigrationHistory" msprop:Generator_RowDeletingName="__MigrationHistoryRowDeleting" msprop:Generator_RowChangingName="__MigrationHistoryRowChanging" msprop:Generator_RowEvHandlerName="__MigrationHistoryRowChangeEventHandler" msprop:Generator_RowDeletedName="__MigrationHistoryRowDeleted" msprop:Generator_UserTableName="__MigrationHistory" msprop:Generator_RowChangedName="__MigrationHistoryRowChanged" msprop:Generator_RowEvArgName="__MigrationHistoryRowChangeEvent" msprop:Generator_RowClassName="__MigrationHistoryRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="MigrationId" msprop:Generator_ColumnVarNameInTable="columnMigrationId" msprop:Generator_ColumnPropNameInRow="MigrationId" msprop:Generator_ColumnPropNameInTable="MigrationIdColumn" msprop:Generator_UserColumnName="MigrationId">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="150" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="ContextKey" msprop:Generator_ColumnVarNameInTable="columnContextKey" msprop:Generator_ColumnPropNameInRow="ContextKey" msprop:Generator_ColumnPropNameInTable="ContextKeyColumn" msprop:Generator_UserColumnName="ContextKey">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="300" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Model" msprop:Generator_ColumnVarNameInTable="columnModel" msprop:Generator_ColumnPropNameInRow="Model" msprop:Generator_ColumnPropNameInTable="ModelColumn" msprop:Generator_UserColumnName="Model" type="xs:base64Binary" />
              <xs:element name="ProductVersion" msprop:Generator_ColumnVarNameInTable="columnProductVersion" msprop:Generator_ColumnPropNameInRow="ProductVersion" msprop:Generator_ColumnPropNameInTable="ProductVersionColumn" msprop:Generator_UserColumnName="ProductVersion">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="32" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Categories" msprop:Generator_TableClassName="CategoriesDataTable" msprop:Generator_TableVarName="tableCategories" msprop:Generator_TablePropName="Categories" msprop:Generator_RowDeletingName="CategoriesRowDeleting" msprop:Generator_RowChangingName="CategoriesRowChanging" msprop:Generator_RowEvHandlerName="CategoriesRowChangeEventHandler" msprop:Generator_RowDeletedName="CategoriesRowDeleted" msprop:Generator_UserTableName="Categories" msprop:Generator_RowChangedName="CategoriesRowChanged" msprop:Generator_RowEvArgName="CategoriesRowChangeEvent" msprop:Generator_RowClassName="CategoriesRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="CategoryID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnCategoryID" msprop:Generator_ColumnPropNameInRow="CategoryID" msprop:Generator_ColumnPropNameInTable="CategoryIDColumn" msprop:Generator_UserColumnName="CategoryID" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="ParentCategoryID" msprop:Generator_ColumnVarNameInTable="columnParentCategoryID" msprop:Generator_ColumnPropNameInRow="ParentCategoryID" msprop:Generator_ColumnPropNameInTable="ParentCategoryIDColumn" msprop:Generator_UserColumnName="ParentCategoryID" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="CategoryProperty" msprop:Generator_TableClassName="CategoryPropertyDataTable" msprop:Generator_TableVarName="tableCategoryProperty" msprop:Generator_TablePropName="CategoryProperty" msprop:Generator_RowDeletingName="CategoryPropertyRowDeleting" msprop:Generator_RowChangingName="CategoryPropertyRowChanging" msprop:Generator_RowEvHandlerName="CategoryPropertyRowChangeEventHandler" msprop:Generator_RowDeletedName="CategoryPropertyRowDeleted" msprop:Generator_UserTableName="CategoryProperty" msprop:Generator_RowChangedName="CategoryPropertyRowChanged" msprop:Generator_RowEvArgName="CategoryPropertyRowChangeEvent" msprop:Generator_RowClassName="CategoryPropertyRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="CategoryID" msprop:Generator_ColumnVarNameInTable="columnCategoryID" msprop:Generator_ColumnPropNameInRow="CategoryID" msprop:Generator_ColumnPropNameInTable="CategoryIDColumn" msprop:Generator_UserColumnName="CategoryID" type="xs:int" />
              <xs:element name="PropertyID" msprop:Generator_ColumnVarNameInTable="columnPropertyID" msprop:Generator_ColumnPropNameInRow="PropertyID" msprop:Generator_ColumnPropNameInTable="PropertyIDColumn" msprop:Generator_UserColumnName="PropertyID" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="InstanceProperty" msprop:Generator_TableClassName="InstancePropertyDataTable" msprop:Generator_TableVarName="tableInstanceProperty" msprop:Generator_TablePropName="InstanceProperty" msprop:Generator_RowDeletingName="InstancePropertyRowDeleting" msprop:Generator_RowChangingName="InstancePropertyRowChanging" msprop:Generator_RowEvHandlerName="InstancePropertyRowChangeEventHandler" msprop:Generator_RowDeletedName="InstancePropertyRowDeleted" msprop:Generator_UserTableName="InstanceProperty" msprop:Generator_RowChangedName="InstancePropertyRowChanged" msprop:Generator_RowEvArgName="InstancePropertyRowChangeEvent" msprop:Generator_RowClassName="InstancePropertyRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="InstanceID" msprop:Generator_ColumnVarNameInTable="columnInstanceID" msprop:Generator_ColumnPropNameInRow="InstanceID" msprop:Generator_ColumnPropNameInTable="InstanceIDColumn" msprop:Generator_UserColumnName="InstanceID" type="xs:int" />
              <xs:element name="PropertyID" msprop:Generator_ColumnVarNameInTable="columnPropertyID" msprop:Generator_ColumnPropNameInRow="PropertyID" msprop:Generator_ColumnPropNameInTable="PropertyIDColumn" msprop:Generator_UserColumnName="PropertyID" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Instances" msprop:Generator_TableClassName="InstancesDataTable" msprop:Generator_TableVarName="tableInstances" msprop:Generator_TablePropName="Instances" msprop:Generator_RowDeletingName="InstancesRowDeleting" msprop:Generator_RowChangingName="InstancesRowChanging" msprop:Generator_RowEvHandlerName="InstancesRowChangeEventHandler" msprop:Generator_RowDeletedName="InstancesRowDeleted" msprop:Generator_UserTableName="Instances" msprop:Generator_RowChangedName="InstancesRowChanged" msprop:Generator_RowEvArgName="InstancesRowChangeEvent" msprop:Generator_RowClassName="InstancesRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="InstanceID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnInstanceID" msprop:Generator_ColumnPropNameInRow="InstanceID" msprop:Generator_ColumnPropNameInTable="InstanceIDColumn" msprop:Generator_UserColumnName="InstanceID" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="CategoryID" msprop:Generator_ColumnVarNameInTable="columnCategoryID" msprop:Generator_ColumnPropNameInRow="CategoryID" msprop:Generator_ColumnPropNameInTable="CategoryIDColumn" msprop:Generator_UserColumnName="CategoryID" type="xs:int" />
              <xs:element name="CreatedAt" msprop:Generator_ColumnVarNameInTable="columnCreatedAt" msprop:Generator_ColumnPropNameInRow="CreatedAt" msprop:Generator_ColumnPropNameInTable="CreatedAtColumn" msprop:Generator_UserColumnName="CreatedAt" type="xs:dateTime" />
              <xs:element name="UpdatedAt" msprop:Generator_ColumnVarNameInTable="columnUpdatedAt" msprop:Generator_ColumnPropNameInRow="UpdatedAt" msprop:Generator_ColumnPropNameInTable="UpdatedAtColumn" msprop:Generator_UserColumnName="UpdatedAt" type="xs:dateTime" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Properties" msprop:Generator_TableClassName="PropertiesDataTable" msprop:Generator_TableVarName="tableProperties" msprop:Generator_TablePropName="Properties" msprop:Generator_RowDeletingName="PropertiesRowDeleting" msprop:Generator_RowChangingName="PropertiesRowChanging" msprop:Generator_RowEvHandlerName="PropertiesRowChangeEventHandler" msprop:Generator_RowDeletedName="PropertiesRowDeleted" msprop:Generator_UserTableName="Properties" msprop:Generator_RowChangedName="PropertiesRowChanged" msprop:Generator_RowEvArgName="PropertiesRowChangeEvent" msprop:Generator_RowClassName="PropertiesRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="PropertyID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnPropertyID" msprop:Generator_ColumnPropNameInRow="PropertyID" msprop:Generator_ColumnPropNameInTable="PropertyIDColumn" msprop:Generator_UserColumnName="PropertyID" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="PropertyValues" msprop:Generator_TableClassName="PropertyValuesDataTable" msprop:Generator_TableVarName="tablePropertyValues" msprop:Generator_TablePropName="PropertyValues" msprop:Generator_RowDeletingName="PropertyValuesRowDeleting" msprop:Generator_RowChangingName="PropertyValuesRowChanging" msprop:Generator_RowEvHandlerName="PropertyValuesRowChangeEventHandler" msprop:Generator_RowDeletedName="PropertyValuesRowDeleted" msprop:Generator_UserTableName="PropertyValues" msprop:Generator_RowChangedName="PropertyValuesRowChanged" msprop:Generator_RowEvArgName="PropertyValuesRowChangeEvent" msprop:Generator_RowClassName="PropertyValuesRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="PropertyValueID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnPropertyValueID" msprop:Generator_ColumnPropNameInRow="PropertyValueID" msprop:Generator_ColumnPropNameInTable="PropertyValueIDColumn" msprop:Generator_UserColumnName="PropertyValueID" type="xs:int" />
              <xs:element name="Value" msprop:Generator_ColumnVarNameInTable="columnValue" msprop:Generator_ColumnPropNameInRow="Value" msprop:Generator_ColumnPropNameInTable="ValueColumn" msprop:Generator_UserColumnName="Value" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="PropertyID" msprop:Generator_ColumnVarNameInTable="columnPropertyID" msprop:Generator_ColumnPropNameInRow="PropertyID" msprop:Generator_ColumnPropNameInTable="PropertyIDColumn" msprop:Generator_UserColumnName="PropertyID" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:__MigrationHistory" />
      <xs:field xpath="mstns:MigrationId" />
      <xs:field xpath="mstns:ContextKey" />
    </xs:unique>
    <xs:unique name="Categories_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Categories" />
      <xs:field xpath="mstns:CategoryID" />
    </xs:unique>
    <xs:unique name="CategoryProperty_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:CategoryProperty" />
      <xs:field xpath="mstns:CategoryID" />
      <xs:field xpath="mstns:PropertyID" />
    </xs:unique>
    <xs:unique name="InstanceProperty_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:InstanceProperty" />
      <xs:field xpath="mstns:InstanceID" />
      <xs:field xpath="mstns:PropertyID" />
    </xs:unique>
    <xs:unique name="Instances_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Instances" />
      <xs:field xpath="mstns:InstanceID" />
    </xs:unique>
    <xs:unique name="Properties_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Properties" />
      <xs:field xpath="mstns:PropertyID" />
    </xs:unique>
    <xs:unique name="PropertyValues_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:PropertyValues" />
      <xs:field xpath="mstns:PropertyValueID" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_dbo.Categories_dbo.Categories_ParentCategoryID" msdata:parent="Categories" msdata:child="Categories" msdata:parentkey="CategoryID" msdata:childkey="ParentCategoryID" msprop:Generator_UserChildTable="Categories" msprop:Generator_ChildPropName="GetCategoriesRows" msprop:Generator_UserRelationName="FK_dbo.Categories_dbo.Categories_ParentCategoryID" msprop:Generator_RelationVarName="_relationFK_dbo_Categories_dbo_Categories_ParentCategoryID" msprop:Generator_UserParentTable="Categories" msprop:Generator_ParentPropName="CategoriesRowParent" />
      <msdata:Relationship name="FK_dbo.CategoryProperty_dbo.Categories_CategoryID" msdata:parent="Categories" msdata:child="CategoryProperty" msdata:parentkey="CategoryID" msdata:childkey="CategoryID" msprop:Generator_UserChildTable="CategoryProperty" msprop:Generator_ChildPropName="GetCategoryPropertyRows" msprop:Generator_UserRelationName="FK_dbo.CategoryProperty_dbo.Categories_CategoryID" msprop:Generator_ParentPropName="CategoriesRow" msprop:Generator_RelationVarName="_relationFK_dbo_CategoryProperty_dbo_Categories_CategoryID" msprop:Generator_UserParentTable="Categories" />
      <msdata:Relationship name="FK_dbo.CategoryProperty_dbo.Properties_PropertyID" msdata:parent="Properties" msdata:child="CategoryProperty" msdata:parentkey="PropertyID" msdata:childkey="PropertyID" msprop:Generator_UserChildTable="CategoryProperty" msprop:Generator_ChildPropName="GetCategoryPropertyRows" msprop:Generator_UserRelationName="FK_dbo.CategoryProperty_dbo.Properties_PropertyID" msprop:Generator_RelationVarName="_relationFK_dbo_CategoryProperty_dbo_Properties_PropertyID" msprop:Generator_UserParentTable="Properties" msprop:Generator_ParentPropName="PropertiesRow" />
      <msdata:Relationship name="FK_dbo.InstanceProperty_dbo.Instances_InstanceID" msdata:parent="Instances" msdata:child="InstanceProperty" msdata:parentkey="InstanceID" msdata:childkey="InstanceID" msprop:Generator_UserChildTable="InstanceProperty" msprop:Generator_ChildPropName="GetInstancePropertyRows" msprop:Generator_UserRelationName="FK_dbo.InstanceProperty_dbo.Instances_InstanceID" msprop:Generator_RelationVarName="_relationFK_dbo_InstanceProperty_dbo_Instances_InstanceID" msprop:Generator_UserParentTable="Instances" msprop:Generator_ParentPropName="InstancesRow" />
      <msdata:Relationship name="FK_dbo.InstanceProperty_dbo.Properties_PropertyID" msdata:parent="Properties" msdata:child="InstanceProperty" msdata:parentkey="PropertyID" msdata:childkey="PropertyID" msprop:Generator_UserChildTable="InstanceProperty" msprop:Generator_ChildPropName="GetInstancePropertyRows" msprop:Generator_UserRelationName="FK_dbo.InstanceProperty_dbo.Properties_PropertyID" msprop:Generator_RelationVarName="_relationFK_dbo_InstanceProperty_dbo_Properties_PropertyID" msprop:Generator_UserParentTable="Properties" msprop:Generator_ParentPropName="PropertiesRow" />
      <msdata:Relationship name="FK_dbo.Instances_dbo.Categories_CategoryID" msdata:parent="Categories" msdata:child="Instances" msdata:parentkey="CategoryID" msdata:childkey="CategoryID" msprop:Generator_UserChildTable="Instances" msprop:Generator_ChildPropName="GetInstancesRows" msprop:Generator_UserRelationName="FK_dbo.Instances_dbo.Categories_CategoryID" msprop:Generator_ParentPropName="CategoriesRow" msprop:Generator_RelationVarName="_relationFK_dbo_Instances_dbo_Categories_CategoryID" msprop:Generator_UserParentTable="Categories" />
      <msdata:Relationship name="FK_dbo.PropertyValues_dbo.Properties_PropertyID" msdata:parent="Properties" msdata:child="PropertyValues" msdata:parentkey="PropertyID" msdata:childkey="PropertyID" msprop:Generator_UserChildTable="PropertyValues" msprop:Generator_ChildPropName="GetPropertyValuesRows" msprop:Generator_UserRelationName="FK_dbo.PropertyValues_dbo.Properties_PropertyID" msprop:Generator_ParentPropName="PropertiesRow" msprop:Generator_RelationVarName="_relationFK_dbo_PropertyValues_dbo_Properties_PropertyID" msprop:Generator_UserParentTable="Properties" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>